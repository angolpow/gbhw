"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами
выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class NotIntError(Exception):
    def __init__(self, txt='Int check failed'):
        self.txt = txt


def check_int(string: str):
    try:
        result = int(string)
    except ValueError:
        try:
            result = float(string)
        except ValueError:
            raise NotIntError
    return result


def main():
    list_of_ints = []
    while True:
        user_input = input('Введите число или команду stop: ')
        if user_input == 'stop':
            break
        try:
            list_of_ints.append(check_int(user_input))
        except NotIntError:
            print('Вы ввели не число')

    print(list_of_ints)


main()
